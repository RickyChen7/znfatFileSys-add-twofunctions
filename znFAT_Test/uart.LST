C51 COMPILER V9.54   UART                                                                  05/29/2018 20:45:20 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN uart.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE uart.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "STC15W4K.H" 
   2          #include <string.h>       
   3          /******************************************************************
   4          功能：将一个32位长整型变量dat转为字符串，比如把1234转为"1234"
   5          参数：dat:待转的long型的变量
   6                str:指向字符数组的指针，转换后的字节串放在其中    
   7          返回：转换后的字符串长度                                
   8           ******************************************************************/ 
   9          unsigned char Long_Str(long dat,unsigned char *str) // 长整型数转换为字符串，返回值为转换后的字符串长度
  10          {
  11   1              signed char i=0;
  12   1              unsigned char len = 0;
  13   1              unsigned char buf[11];     // 长整数最大值4294967295，转ASCII码后占用10+1=11字节 
  14   1              if (dat < 0)               // 如果为负数，首先取绝对值，并添加负号
  15   1              {
  16   2                      dat = -dat;
  17   2                      *str++ = '-';
  18   2                      len++;
  19   2              }
  20   1              do 
  21   1              {                               // 低位在前高位在后顺序排列
  22   2                      buf[i++] = dat % 10+0x30;       // C语言中数组下标固定从0开始
  23   2                      dat /= 10;
  24   2              } while (dat > 0);
  25   1          len += i;                 // i最后的值就是有效字符的个数
  26   1          while (i-- > 0)           // 高位在前低位在后顺序排列
  27   1          {
  28   2              *str++ = buf[i] ;
  29   2          }     
  30   1              *str = 0;                 // 添加字符串结束符方便使用KEIL自带的字符串处理函数处理
  31   1              return len;               // 返回字符串长度
  32   1      }
  33          
  34          /******************************************************************
  35          功能：将一个字符串转为32位长整型变量，比如"1234"转为1234
  36          参数：str:指向待转换的字符串           
  37          返回：转换后的数值                                                                                     
  38           ******************************************** **********************/ 
  39          /*
  40          unsigned long Str_Long(char *str) 
  41          {
  42                   unsigned long temp=0;
  43                   unsigned long fact=1;
  44                   unsigned char len=strlen(str); // <string.h>头文件包含strlen()函数     
  45                   unsigned char i;               // strlen()函数计算的字符串长度不包含最后一个空字符(值0)
  46                   for(i=len;i>0;i--)                                                                                                                        
  47                   {
  48                          temp+=((str[i-1]-0x30)*fact);  // 数组下标从0开始
  49                          fact*=10;
  50                   }
  51                   return temp;
  52          }
  53          */
  54          
  55          /**************************************************************************
C51 COMPILER V9.54   UART                                                                  05/29/2018 20:45:20 PAGE 2   

  56          功能：STC15单片机串口1初始化,使用T1方式2自重载方式做波特率发生器 
  57           **************************************************************************/
  58          void UART_Init(void)
  59          {                
  60   1      
  61   1      //                                                      PCON &= 0x7F;           //??????
  62   1      //      SCON = 0x50;            //8???,?????
  63   1      //      AUXR &= 0xBF;           //???1???Fosc/12,?12T
  64   1      //      AUXR &= 0xFE;           //??1?????1???????
  65   1      //      TMOD &= 0x0F;           //?????1???
  66   1      //      TMOD |= 0x20;           //?????1?8???????
  67   1      //      TL1 = 0xFD;             //??????
  68   1      //      TH1 = 0xFD;             //????????
  69   1      //      ET1 = 0;                //?????1??
  70   1      //      TR1 = 1;                //?????1        
  71   1              // 下面代码设置定时器1
  72   1              TMOD |= 0x20;   // 0010 0000 定时器1工作于方式2（8位自动重装方式）
  73   1              TH1  = 0xFA;    // 波特率：9600 /22.1184MHZ
  74   1              TL1  = 0xFA;    // 波特率：9600 /22.1184MHZ
  75   1              TR1  = 1;
  76   1              // 下面代码设置定串口
  77   1              AUXR = 0x00;             // 很关键，使用定时器1作为波特率发生器，S1ST2=0
  78   1              SCON = 0x50;    // 01010 0000 SM0.SM1=01(最普遍的8位通信）,REN=1（允许接受）
  79   1              // 下面代码设置中断
  80   1              ES   = 1;               // 关键：开启了中断就必须编写相应的中断函数，哪怕是中断空函数，
  81   1                              // 但必须有,否则程序进入中断入口地址后（这里是0023H)不能跳出，必然出错
  82   1              EA   = 1;
  83   1      }  
  84          
  85          /**************************************************************************
  86          功能：STC15单片机的串口发送字节的函数
  87          参数：dat:要发送的一个字节   
  88          **************************************************************************/
  89          void UART_Send_Byte(unsigned char dat)
  90          {
  91   1              ES=0;            // 使用查询发送结束方式，禁止中断干预
  92   1              SBUF = dat;
  93   1              while(!TI);         
  94   1              TI=0;    //此句可以不要，不影响后面数据的发送，只供代码查询数据是否发送完成
  95   1              ES=1;
  96   1      }       
  97          /**************************************************************************
  98          功能：STC15单片机的串口发送0d 0a ，即回车换行 
  99          注：此函数就是发送0d 0a这两个字节，在"串口助手"上会有回车换行的效果
 100           **************************************************************************/  
 101          void UART_Send_Enter()
 102          {
 103   1              UART_Send_Byte(0x0d); // 转义字符常量\r，ASCII码值（10进制）=13，光标移到本行行首
 104   1              UART_Send_Byte(0x0a); // 转义字符常量\n，ASCII码值（10进制）=10，光标移到下行行首
 105   1      }
 106          
 107          /*
 108          void UART_Send_Str(char *buf)
 109          {
 110                  while (*buf != '\0')   //说明：C语言字符串数组结尾必然有一个"\0"字符，在内存中数值为0
 111                  {
 112                          UART_send_byte(*buf++);  //说明：* 和 ++优先级相同，结合性从右到左，但是++运
 113                  }                                                        //算符有个特性就是先让变量参与运算，后进行加1操作
 114          }        */
 115          
 116          /**************************************************************************
 117          功能：51单片机的串口发送字符串  
C51 COMPILER V9.54   UART                                                                  05/29/2018 20:45:20 PAGE 3   

 118          参数：s:指向字符串的指针          
 119          注：如果在字符串中有'\n'，则会发送一个回车换行
 120           **************************************************************************/
 121          void UART_Send_Str(char *s)
 122          {
 123   1              unsigned int i;         
 124   1              unsigned int len=strlen(s)-1;           // 最后一个字符单独处理
 125   1              for(i=0;i<len;i++) 
 126   1                      UART_Send_Byte(s[i]);           //      while (*buf != '\0')  UART_Send_Byte(*s++);
 127   1              if(s[i]=='\n')                       
 128   1              {
 129   2                      UART_Send_Enter();
 130   2              }
 131   1              else
 132   1              {
 133   2                      UART_Send_Byte(s[i]);   // 普通字符正常发送
 134   2              }
 135   1      }
 136          /**************************************************************************
 137          功能：51单片机的串口发送数值
 138          参数：dat:要发送的数值(长整数)
 139            注：函数中会将数值转为相应的字符串，发送出去。比如 4567 转为 "4567" 
 140           **************************************************************************/
 141          void UART_Send_Num(unsigned long dat)
 142          {
 143   1              unsigned char temp[11];         // 长整数最大值4294967295，转ASCII码后占用10字节
 144   1                  //  由于后面程序要使用strlen()库函数计算长度，需增加1个字节存放结束符0
 145   1              Long_Str(dat,temp);       
 146   1              UART_Send_Str(temp);
 147   1              UART_Send_Enter();          // 发送回车 
 148   1      }
 149          /**************************************************************************
 150          功能：51单片机的串口发送调试信息（字符串+数值）   
 151          参数：inf:指向提示信息字符串的指针
 152                dat:一个数值，前面的提示信息就是在说明这个数值的意义
 153           **************************************************************************/
 154          void UART_Send_StrNum(char *inf,unsigned long dat)
 155          {
 156   1              UART_Send_Str(inf);
 157   1              UART_Send_Num(dat);     
 158   1      } 
 159          
 160          /**************************************************************************
 161          功能：16进制转ASCII码函数
 162           **************************************************************************/
 163          /*
 164          unsigned char Hex_ASCII(unsigned int hex,char *str)
 165          {
 166                  unsigned char temp=0;
 167                  
 168                  temp=((hex&0xf000)>>12);          // 4位1表示范围0_9_A_F
 169                  str[0]=(temp>=10)?(temp-10+'A'):(temp+0x30);
 170                          // 0_9的ASCII码是0_9+ 0x30，
 171                      // A_F的ASCII码: A代表数值10，A的ASCII码是65，因此数值+55=ASCII
 172                          // 因此算式(temp-10+'A')=(temp-10+65)=(temp+55)
 173                          // 分析依据：ASCII码表
 174                  temp=((hex&0x0f00)>>8);
 175                  str[1]=(temp>=10)?(temp-10+'A'):(temp+0x30);
 176                  
 177                  temp=((hex&0x00f0)>>4);
 178                  str[2]=(temp>=10)?(temp-10+'A'):(temp+0x30);
 179                  
C51 COMPILER V9.54   UART                                                                  05/29/2018 20:45:20 PAGE 4   

 180                  temp=((hex&0x000f)>>0);
 181                  str[3]=(temp>=10)?(temp-10+'A'):(temp+0x30);
 182                  
 183                  str[4]=0;           // 由于要使用KEIL自带的字符串处理函数处理，必须有结束标记。 
 184                  
 185                  return 0;
 186          } 
 187          */
 188          /**************************************************************************
 189          功能：51单片机的串口输出ASCII码函数（接收端按字符形式接收则显示为HEX格式        ）
 190           **************************************************************************/
 191          /*
 192          void UART_Send_Hex(unsigned int hex)
 193          {
 194                  unsigned char temp[11];
 195                  Hex_ASCII(hex,temp);
 196                  UART_Send_Str(temp);
 197                  UART_Send_Enter();          // 发送回车
 198          }
 199          */
 200          
 201          /**************************************************************************
 202          功能：51单片机的串口发送调试信息（二进制数据显示）        
 203          参数：dat:需要按2进制形式显示变量
 204           **************************************************************************/
 205          /*
 206          void UART_Send_binary(unsigned char dat)
 207          {
 208                  unsigned char i;
 209                  unsigned char a[17];
 210                  for(i=0;i<8;i++)
 211                  {
 212                          a[i]=((dat<<i)&0x80)?'1':'0';
 213                  }
 214                  a[i]=0;
 215                  for(i=0;i<strlen(a);i++)
 216                  {
 217                          UART_Send_Byte(a[i]);
 218                          UART_Send_Byte(' ');
 219                  }
 220                  UART_Send_Enter();          // 发送回车
 221          }
 222          */
 223          /**************************************************************************
 224          功能：51单片机的串口1中断处理函数       
 225           **************************************************************************/
 226          /*
 227          void UART1_ISR (void) interrupt 4  // 串行口1中断函数  
 228          { ; }
 229          */
 230          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    469    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      40
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.54   UART                                                                  05/29/2018 20:45:20 PAGE 5   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
